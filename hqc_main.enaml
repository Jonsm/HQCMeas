from enaml.layout.api import hbox
from enaml.widgets.api import (MainWindow, Container, DockPane, MenuBar, Menu,
                            PushButton, Action)

from hqc_meas.measurement.execution_view import ExecutionView
from hqc_meas.measurement.edition_view import MeasEditorContainer
from hqc_meas.instruments.instrument_manager import InstrumentManager
from hqc_meas.instruments.instrument_manager_view import InstrumentManagerView
from hqc_meas.enaml_util.qt_autoscrollmultilinedisplay\
    import QtAutoScrollMultilineDisplay

enamldef MessagePanel(DockPane):
    attr model
    closable = False
    Container:
        QtAutoScrollMultilineDisplay:
            hug_height = 'ignore'
            resist_height = 'ignore'
            constraints = [height >= 50]
            text << model.string
        PushButton:
            text = 'Clear'
            hug_width = 'weak'            
            clicked ::
                model.string = ''
            
enamldef HqcMainWindow(MainWindow): main:
    attr main_model
    title = 'HQC Measurement'
    MenuBar:
        Menu:
            title = 'Instr'
            Action:
                text = 'Manager'
                triggered ::
                    manager = InstrumentManager()
                    view = InstrumentManagerView(parent = main, 
                                                 manager = manager)
                    view.show()
    MeasEditorContainer:
        meas := main_model.meas
        hug_height = 'weak'
        enqueue_clicked:: main_model.enqueue_measurement()
    ExecutionView:
        ex_model = main_model.exe_control
        dock_area = 'right'
        title = 'Enqueued measure'
    MessagePanel:
        model << main_model.main_log
        dock_area = 'bottom'
        title = 'Main process'
    MessagePanel:
        model << main_model.meas_log
        dock_area = 'bottom'
        title = 'Measure process' 