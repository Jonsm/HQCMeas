from enaml.widgets.api import (Container, Field, MultilineField, CheckBox,
                            PushButton, Dialog)
from enaml.layout.api import align, hbox, vbox, spacer
from enaml.stdlib.message_box import question
from textwrap import fill

from ..enaml_util.qt_list_str_widget import QtListStrWidget

def accept_template_info(ui, model):
    """
    """
    if '.ini' not in model.template_filename:
        filename = model.template_filename + '.ini'
    else:
        filename = model.template_filename

    if filename in model.template_tasks:
        message = cleandoc("""You entered a template name which already
                    exists, do you want to erase the existing file
                    """)
        result = question(message = fill(message.replace('\n', ' '), 80),
                          title = 'Overwrite confirm :',
                          parent = ui)
        if result and result.action == 'reject':
            return False

    return True  
   

enamldef TemplateSaverView(Dialog): dial:
    attr model
    Container:
        constraints = [vbox(
                        hbox(list, vbox(name, doc, res)),
                        hbox(spacer.flex(), cancel, ok))
                      ]
        QtListStrWidget: list:
            items << model.template_tasks
            selected_item := model.template_filename
            operations = []
        Field: name:
            text := model.template_filename
        MultilineField: doc:
            text := model.template_doc
        CheckBox: res:
            text = 'Show result'
            checked >> model.show_result
        PushButton: cancel:
            hug_width = 'strong'
            text = 'Cancel'
            clicked::
                dial.reject()
        PushButton: ok:
            hug_width = 'strong'
            text = 'Ok'
            enabled << model.ok_ready
            clicked ::
                if accept_template_info(dial, model):
                    dial.accept() 

enamldef ScintillaDialog(Dialog): dial:
    alias text : sci.text
    Container:
        constraints = [vbox(sci, ok),
                       align('right', sci, ok)]
        MultilineField: sci:
            read_only = True
        PushButton: ok:
            text = 'Ok'
            clicked ::
                dial.accept()   