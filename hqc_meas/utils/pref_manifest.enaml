# -*- coding: utf-8 -*-
#==============================================================================
# module : manager_manifest.py
# author : Matthieu Dartiailh
# license : MIT license
#==============================================================================
"""
"""
from enaml.workbench.api import PluginManifest, Extension, ExtensionPoint
from enaml.workbench.core.api import Command
from enaml.workbench.ui.api import ActionItem, MenuItem, ItemGroup
from enaml.widgets.api import FileDialogEx

from .manager_view import InstrManagerView


def preference_plugin_factory():
    """ Factory function for the PrefPlugin

    """
    from .pref_plugin import PrefPlugin
    return PrefPlugin()


def save_preferences(event):
    """ Handler for the 'hqc_meas.preferences.save' command

    """
    pref = event.workbench.get_plugin('hqc_meas.preferences')
    if 'path' in event.parameters:
        path = FileDialogEx.get_save_file_name(name_filters=['*.ini'])
        if path:
            pref.save_preferences(path=path)
    else:
        pref.save_preferences()


def load_preferences(event):
    """ Handler for the 'hqc_meas.preferences.load' command

    """
    pref = event.workbench.get_plugin('hqc_meas.preferences')
    if 'path' in event.parameters:
        path = FileDialogEx.get_open_file_name(name_filters=['*.ini'])
        if path:
            pref.load_preferences(path=path)
    else:
        pref.load_preferences()

PREF_PLUGINS_DESCRIPTION = \
"""Plugins which uses the built in preferences system should provide an
extension to this point in the form of a Preferences object so that they are
hooked up in the automatic saving of preferences
"""

SAVE_PREFERENCES_DESCRIPTION = \
"""
"""

LOAD_PREFERENCES_DESCRIPTION = \
"""
"""

enamldef PreferencesManifest(PluginManifest):
    """
    """
    attr default_folder: str

    id = 'hqc_meas.preferences'
    factory = preference_plugin_factory

    ExtensionPoint:
        id = 'pref_plugins'
        description = PREF_PLUGINS_DESCRIPTION
    Extension:
        id = 'commands'
        point = 'enaml.workbench.core.commands'
        Command:
            id = 'hqc_meas.preferences.save'
            description = SAVE_PREF_DESCRIPTION
            handler = save_preferences
        Command:
            id = 'hqc_meas.preferences.load'
            description = LOAD_PREF_DESCRIPTION
            handler = load_preferences
