# -*- coding: utf-8 -*-
#==============================================================================
# module : psa_tasks-views.py
# author : Benjamin Huard
# license : MIT license
#==============================================================================
from enaml.core.api import Conditional, Include
from enaml.widgets.api import (GroupBox, Label, Field, ObjectCombo, CheckBox)
from enaml.layout.api import factory

from inspect import cleandoc
from textwrap import fill

from hqc_meas.utils.widgets.qt_line_completer import QtLineCompleter
from hqc_meas.utils.layouts import auto_grid_layout
from hqc_meas.tasks.views.base_instr_view import BaseInstrumentView
from hqc_meas.tasks.tools.string_evaluation import EVALUATER_TOOLTIP



enamldef DemodAlazarView(BaseInstrumentView): view:

    attr in_loop : bool = False
    title << task.task_name
    constraints = [factory(auto_grid_layout),
                   dfreq_val.width == before_val.width,
                   before_val.width == after_val.width]


    Label: sel_driv:
        text = 'Driver'
    ObjectCombo: sel_val:
        items << sorted(drivers)
        selected := task.selected_driver

    Label: sel_prof:
        text = 'Instr'
    ObjectCombo: prof_val:
        items << sorted(profiles)
        selected := task.selected_profile
        
    Label: dfreq:
        text = 'Demodulation frequency'
    Field: dfreq_val:
        text := task.freq

    Label: before:
        text = 'Time before trigger (s)'
    Field: before_val:
        text := task.timebeforetrig

    Label: after:
        text = 'Time after trigger (s)'
    Field: after_val:
        text := task.timeaftertrig


enamldef TracesAlazarView(BaseInstrumentView): view:

    attr in_loop : bool = False
    title << task.task_name
    constraints = [factory(auto_grid_layout),
                   before_val.width == after_val.width]


    Label: sel_driv:
        text = 'Driver'
    ObjectCombo: sel_val:
        items << sorted(drivers)
        selected := task.selected_driver

    Label: sel_prof:
        text = 'Instr'
    ObjectCombo: prof_val:
        items << sorted(profiles)
        selected := task.selected_profile

    Label: before:
        text = 'Time before trigger (s)'
    Field: before_val:
        text := task.timebeforetrig

    Label: after:
        text = 'Time after trigger (s)'
    Field: after_val:
        text := task.timeaftertrig



TASK_VIEW_MAPPING = {'DemodAlazarTask': DemodAlazarView,
                     'TracesAlazarTask': TracesAlazarView}
