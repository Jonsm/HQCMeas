# -*- coding: utf-8 -*-
#==============================================================================
# module : psa_tasks-views.py
# author : Benjamin Huard
# license : MIT license
#==============================================================================
from enaml.core.api import Conditional, Include
from enaml.widgets.api import (GroupBox, Label, Field, ObjectCombo, CheckBox)
from enaml.layout.api import factory

from inspect import cleandoc
from textwrap import fill

from hqc_meas.utils.widgets.qt_line_completer import QtLineCompleter
from hqc_meas.utils.layouts import auto_grid_layout
from hqc_meas.tasks.views.base_instr_view import BaseInstrumentView
from hqc_meas.tasks.tools.string_evaluation import EVALUATER_TOOLTIP



enamldef DemodAlazarView(BaseInstrumentView): view:

    attr in_loop : bool = False
    title << task.task_name
    constraints = [factory(auto_grid_layout),
                   dfreq_val.width == after_val.width,
                   after_val.width == buffer_val.width]


    Label: sel_driv:
        text = 'Driver'
    ObjectCombo: sel_val:
        items << sorted(drivers)
        selected := task.selected_driver

    Label: sel_prof:
        text = 'Instr'
    ObjectCombo: prof_val:
        items << sorted(profiles)
        selected := task.selected_profile
        
    Label: dfreq:
        text = 'Demodulation frequency (MHz)'
    Field: dfreq_val:
        text := task.freq

    Label: after:
        text = 'Time after trigger (mus)'
    Field: after_val:
        text := task.timeaftertrig
        
    Label: average:
        text = 'Average number'
    Field: traces_val:
        text := task.averagenumber
        
    Label: buffer:
        text = 'Traces per Buffer'
    Field: buffer_val:
        text := task.tracesbuffer
        
    Label: average:
        text = 'Average'
    CheckBox: average_val:
        checked := task.average


enamldef TracesAlazarView(BaseInstrumentView): view:

    attr in_loop : bool = False
    title << task.task_name
    constraints = [factory(auto_grid_layout),
                           traces_val.width == after_val.width,
                           traces_val.width == buffer_val.width]


    Label: sel_driv:
        text = 'Driver'
    ObjectCombo: sel_val:
        items << sorted(drivers)
        selected := task.selected_driver

    Label: sel_prof:
        text = 'Instr'
    ObjectCombo: prof_val:
        items << sorted(profiles)
        selected := task.selected_profile

    Label: after:
        text = 'Time after trigger (mus)'
    Field: after_val:
        text := task.timeaftertrig

    Label: traces:
        text = 'Number of traces'
    Field: traces_val:
        text := task.tracesnumber
        
    Label: buffer:
        text = 'Traces per Buffer'
    Field: buffer_val:
        text := task.tracesbuffer
        
    Label: average:
        text = 'Average'
    CheckBox: average_val:
        checked := task.average


TASK_VIEW_MAPPING = {'DemodAlazarTask': DemodAlazarView,
                     'TracesAlazarTask': TracesAlazarView}
