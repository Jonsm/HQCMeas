from enaml.layout.api import grid
from enaml.widgets.api import (GroupBox, Label, Field, ObjectCombo, Splitter,
                               SplitItem, Container)

from hqc_meas.utils.widgets.qt_line_completer import QtLineCompleter
from hqc_meas.tasks.tools.string_evaluation import EVALUATER_TOOLTIP

enamldef ArrayExtremaView(GroupBox): view:

    attr task

    title << task.task_name
    padding = (0,5,5,5)
    constraints << [grid([arr_lab, col_lab, mod_lab],
                         [arr_val, col_val, mod_val]),
                    arr_val.width == 2*col_val.width]

    Label: arr_lab:
        text = 'Target array'
    QtLineCompleter: arr_val:
        hug_width = 'ignore'
        text := task.target_array
        entries_updater << task.accessible_database_entries
        tool_tip = EVALUATER_TOOLTIP

    Label: col_lab:
        text = 'Column name'
    Field: col_val:
        hug_width = 'ignore'
        text := task.column_name

    Label: mod_lab:
        text = 'Mode'
    ObjectCombo: mod_val:
        items = list(task.get_member('mode').items)
        selected := task.mode

enamldef ArrayFindValueView(GroupBox): view:

    attr task
    title << task.task_name
    padding = (0,5,5,5)

    Splitter:
        SplitItem:
            Container:
                Label: arr_lab:
                    text = 'Target array'
                QtLineCompleter: arr_val:
                    hug_width = 'ignore'
                    text := task.target_array
                    entries_updater << task.accessible_database_entries
                    tool_tip = EVALUATER_TOOLTIP

        SplitItem:
            Container:
                Label: col_lab:
                    text = 'Column name'
                Field: col_val:
                    hug_width = 'ignore'
                    text := task.column_name
        SplitItem:
            Container:
                Label: val_lab:
                    text = 'Value'
                QtLineCompleter: val_val:
                    hug_width = 'ignore'
                    text := task.value
                    entries_updater << task.accessible_database_entries
                    tool_tip = EVALUATER_TOOLTIP

TASK_VIEW_MAPPING = {'ArrayExtremaTask' : ArrayExtremaView,
                     'ArrayFindValueTask' : ArrayFindValueView}
